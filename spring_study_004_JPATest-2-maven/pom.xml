<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>spring_study_004_JPATest-2-maven</groupId>
  <artifactId>spring_study_004_JPATest-2-maven</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <packaging>war</packaging>
  
  	<properties>
		<spring.version>3.2.4.RELEASE</spring.version>
		<build.sourceEncoding>UTF-8</build.sourceEncoding>
	</properties>

	<build>
	
	<finalName>spring_study_004_JPATest-2-maven</finalName>

<!-- 什么意思？添加后target/classes下不在生成class文件了 -->
		<outputDirectory>${project.basedir}/src/main/webapp/WEB-INF/classes</outputDirectory>
		<testOutputDirectory>${project.build.outputDirectory}</testOutputDirectory>

		<resources>
			<resource>
				<directory>${project.basedir}/src/main/resources</directory>
			</resource>
			<resource>
				<directory>${project.build.sourceDirectory}</directory>
				<excludes>
					<exclude>**/*.java</exclude>
				</excludes>
			</resource>
		</resources> 
	
		<plugins>
		
		<!-- Maven默认是用JDK1.3去编译, 当代码中遇到注解、泛型等功能时，就会出如下错误： 
		“annotations are not supported in -source 1.3”  -->
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.7</source>
					<target>1.7</target>
				</configuration>
			</plugin>
			
<!-- 			<plugin> -->
<!-- 				<groupId>org.apache.maven.plugins</groupId> -->
<!-- 				<artifactId>maven-checkstyle-plugin</artifactId> -->
<!-- 				<version>2.9.1</version> -->
<!-- 			</plugin> -->
			
			
<!-- maven3应用junit4时需指定org.apache.maven.surefire为    详见 http://maven.apache.org/surefire/maven-surefire-plugin/examples/junit.html -->
	<plugin>
	    <groupId>org.apache.maven.plugins</groupId>
	    <artifactId>maven-surefire-plugin</artifactId>
	    <version>2.12</version>
	    <configuration>   
		          <skipTests>true</skipTests>   
		  </configuration>
	    <dependencies>
	      <dependency>
	        <groupId>org.apache.maven.surefire</groupId>
	        <artifactId>surefire-junit47</artifactId>
	        <version>2.12</version>
	      </dependency>
	    </dependencies>
 	  </plugin>
			
		</plugins>


	</build>

  <dependencies>
	<dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.8.1</version>
      <scope>test</scope>
    </dependency>
    
   <dependency>
        <groupId>joda-time</groupId>
        <artifactId>joda-time</artifactId>
        <version>2.2</version>
    </dependency>   

    
<!--    test  -->
<!-- <dependency> -->
<!-- 	<groupId>net.java.dev.glassfish</groupId> -->
<!-- 	<artifactId>glassfish-transaction-api</artifactId> -->
<!-- 	<version>b32g</version> -->
<!-- </dependency> -->
<!-- 添加后eclipse会自动给我下载到本地库.m2下 -->
   
        <dependency>  
            <groupId>org.springframework</groupId>  
            <artifactId>spring-context</artifactId>  
            <version>${spring.version}</version>
        </dependency>
        
        <dependency>  
            <groupId>org.springframework</groupId>  
            <artifactId>spring-test</artifactId>  
            <version>${spring.version}</version>  
            <scope>test</scope>  
        </dependency>
        
        <dependency>  
            <groupId>org.springframework</groupId>  
            <artifactId>spring-core</artifactId>  
            <version>${spring.version}</version>  
        </dependency>  
  
        <!-- Expression Language (depends on spring-core) Define this if you use   
            Spring Expression APIs (org.springframework.expression.*) -->  
        <dependency>  
            <groupId>org.springframework</groupId>  
            <artifactId>spring-expression</artifactId>  
            <version>${spring.version}</version>  
        </dependency>  
  
        <!-- Bean Factory and JavaBeans utilities (depends on spring-core) Define   
            this if you use Spring Bean APIs (org.springframework.beans.*) -->  
        <dependency>  
            <groupId>org.springframework</groupId>  
            <artifactId>spring-beans</artifactId>  
            <version>${spring.version}</version>  
        </dependency>  
  
        <!-- Aspect Oriented Programming (AOP) Framework (depends on spring-core,   
            spring-beans) Define this if you use Spring AOP APIs (org.springframework.aop.*) -->  
        <dependency>  
            <groupId>org.springframework</groupId>  
            <artifactId>spring-aop</artifactId>  
            <version>${spring.version}</version>  
        </dependency>  
  
        <!-- Application Context (depends on spring-core, spring-expression, spring-aop,   
            spring-beans) This is the central artifact for Spring's Dependency Injection   
            Container and is generally always defined -->  

  
        <!-- Various Application Context utilities, including EhCache, JavaMail,   
            Quartz, and Freemarker integration Define this if you need any of these integrations -->  
        <dependency>  
            <groupId>org.springframework</groupId>  
            <artifactId>spring-context-support</artifactId>  
            <version>${spring.version}</version>  
        </dependency>  
  
        <!-- Transaction Management Abstraction (depends on spring-core, spring-beans,   
            spring-aop, spring-context) Define this if you use Spring Transactions or   
            DAO Exception Hierarchy (org.springframework.transaction.*/org.springframework.dao.*) -->  
        <dependency>  
            <groupId>org.springframework</groupId>  
            <artifactId>spring-tx</artifactId>  
            <version>${spring.version}</version>  
        </dependency>  
  
        <!-- JDBC Data Access Library (depends on spring-core, spring-beans, spring-context,   
            spring-tx) Define this if you use Spring's JdbcTemplate API (org.springframework.jdbc.*) -->  
        <dependency>  
            <groupId>org.springframework</groupId>  
            <artifactId>spring-jdbc</artifactId>  
            <version>${spring.version}</version>  
        </dependency>  
  
        <!-- Object-to-Relation-Mapping (ORM) integration with Hibernate, JPA,   
            and iBatis. (depends on spring-core, spring-beans, spring-context, spring-tx)   
            Define this if you need ORM (org.springframework.orm.*) -->  
        <dependency>  
            <groupId>org.springframework</groupId>  
            <artifactId>spring-orm</artifactId>  
            <version>${spring.version}</version>  
        </dependency>  
  
        <!-- Object-to-XML Mapping (OXM) abstraction and integration with JAXB,   
            JiBX, Castor, XStream, and XML Beans. (depends on spring-core, spring-beans,   
            spring-context) Define this if you need OXM (org.springframework.oxm.*) -->  
        <dependency>  
            <groupId>org.springframework</groupId>  
            <artifactId>spring-oxm</artifactId>  
            <version>${spring.version}</version>  
        </dependency>  
  
        <!-- Web application development utilities applicable to both Servlet and   
            Portlet Environments (depends on spring-core, spring-beans, spring-context)   
            Define this if you use Spring MVC, or wish to use Struts, JSF, or another   
            web framework with Spring (org.springframework.web.*) -->  
        <dependency>  
            <groupId>org.springframework</groupId>  
            <artifactId>spring-web</artifactId>  
            <version>${spring.version}</version>  
        </dependency>  
  
        <!-- Spring MVC for Servlet Environments (depends on spring-core, spring-beans,   
            spring-context, spring-web) Define this if you use Spring MVC with a Servlet   
            Container such as Apache Tomcat (org.springframework.web.servlet.*) -->  
        <dependency>  
            <groupId>org.springframework</groupId>  
            <artifactId>spring-webmvc</artifactId>  
            <version>${spring.version}</version>  
        </dependency>  
  
        <!-- Spring MVC for Portlet Environments (depends on spring-core, spring-beans,   
            spring-context, spring-web) Define this if you use Spring MVC with a Portlet   
            Container (org.springframework.web.portlet.*) -->  
        <dependency>  
            <groupId>org.springframework</groupId>  
            <artifactId>spring-webmvc-portlet</artifactId>  
            <version>${spring.version}</version>  
        </dependency>  
        
<dependency>
	<groupId>org.aspectj</groupId>
	<artifactId>aspectjrt</artifactId>
	<version>1.7.3</version>
</dependency>

<dependency>
	<groupId>org.aspectj</groupId>
	<artifactId>aspectjweaver</artifactId>
	<version>1.7.3</version>
</dependency>

<dependency>
	<groupId>org.springframework.data</groupId>
	<artifactId>spring-data-jpa</artifactId>
	<version>1.0.3.RELEASE</version>
</dependency>

<dependency>
	<groupId>org.springframework.data</groupId>
	<artifactId>spring-data-commons-core</artifactId>
	<version>1.1.0.RELEASE</version>
</dependency>
            



<dependency>
 <groupId>org.slf4j</groupId>
 <artifactId>slf4j-nop</artifactId>
 <version>1.6.1</version>
   </dependency>
     <dependency>
       <groupId>org.hibernate</groupId>
       <artifactId>hibernate-core</artifactId>
       <version>3.3.2.GA</version>
    </dependency>
    <dependency>
       <groupId>org.hibernate</groupId>
       <artifactId>hibernate-annotations</artifactId>
       <version>3.4.0.GA</version>
    </dependency>
    <dependency>
       <groupId>org.hibernate</groupId>
       <artifactId>hibernate-commons-annotations</artifactId>
       <version>3.3.0.ga</version>
    </dependency>
    <dependency>
       <groupId>org.hibernate</groupId>
       <artifactId>hibernate-entitymanager</artifactId>
       <version>3.4.0.GA</version>
    </dependency>
<!--     <dependency> -->
<!--    <groupId>com.oracle</groupId> -->
<!--    <artifactId>ojdbc6</artifactId> -->
<!--    <version>1.0</version> -->
<!--  </dependency> -->




<dependency>
	<groupId>commons-dbcp</groupId>
	<artifactId>commons-dbcp</artifactId>
	<version>1.3</version>
</dependency>

<!-- Maven项目下HttpServletRequest 或 HttpServletResponse需引用的依赖包 -->
<dependency> 
   <groupId>javax.servlet</groupId> 
   <artifactId>servlet-api</artifactId> 
   <version>2.5</version> 
   <scope>provided</scope> 
</dependency> 

  </dependencies>
</project>